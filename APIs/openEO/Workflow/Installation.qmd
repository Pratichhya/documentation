---
title: "Installation"
format:
  html:
    code-fold: true
---


::: {.panel-tabset}

# Python

The openEO Python client library is available on [PyPI](https://pypi.org/project/openeo/){target="_blank"}
and can easily be installed with a tool like `pip`, for example:

```shell script
pip install openeo
```

The client library is also available on [Conda Forge](https://anaconda.org/conda-forge/openeo){target="_blank"}.

It's recommended to work in a virtual environment of some kind (`venv`, `conda`, ...),
containing Python 3.6 or higher.

::: {.callout-note} 
For more details, alternative installation procedures or troubleshooting tips:
see the [official ``openeo`` package installation documentation](https://open-eo.github.io/openeo-python-client/installation.html){target="_blank"}.
:::

# JavaScript

The openEO JavaScript Client can be used in all modern browsers (excludes Internet Explorer) and all maintained Node.js versions (>= 10.x).
It can also been used for mobile app development with the [Ionic Framework](https://ionicframework.com/), for example.

The easiest way to try out the client is using one of the [examples](https://github.com/Open-EO/openeo-js-client/tree/v2.0.0/examples).
Alternatively, you can create an HTML file and include the client with the following HTML `script` tags:

```html
<script src="https://cdn.jsdelivr.net/npm/axios@0.21/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@openeo/js-client@2/openeo.min.js"></script>
```

This gives you a minified version for production environments. If you'd like a better development experience, use the following code:

```html
<script src="https://cdn.jsdelivr.net/npm/axios@0.21/dist/axios.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@openeo/js-client@2/openeo.js"></script>
```

If you are working on a Node.js application or you are using a Node.js-based build tool for web development (e.g. Webpack), you can install the client via [npm](https://npmjs.org/) by using the following command:

```shell script
npm install @openeo/js-client
```

Afterwards you can load the library. Depending on whether you are directly working in Node.js or are just using a Node.js build tool, the import can be different. Please inform yourself which import is suited for your project.

This is usually used directly in Node.js:
```js
const { OpenEO } = require('@openeo/js-client');
```

This may be used in build tools such as Webpack:
```js
import { OpenEO } from '@openeo/js-client';
```

Now that the installation was successfully finished, we can now connect to openEO compliant back-ends. 
In the following chapters we quickly walk through the main features of the JavaScript client. 

If you have trouble installing the client, feel free to [contact us](../../../contact.md) or leave an issue at the [GitHub project](https://github.com/Open-EO/openeo-js-client/issues).


# R

Before you install the R client module into your R environment, please make sure that you have at least R version 3.6. Older versions might also work, but were not tested.

Stable releases can be installed from CRAN:

```r
install.packages("openeo")
```

::: {.callout-note} 

tip Installing the development version

If you want to install the development version, you can install from GitHub. It may contain more features, but may also be unstable.

You need to have the package 'devtools' installed. If it is not installed use `install.packages("devtools")`.

Now you can use `install_github` from the devtools package to install the development version:
```r
devtools::install_github(repo="Open-EO/openeo-r-client", dependencies=TRUE, ref="develop")
```

If this gives you an error, something went wrong with the installation so please check the requirements again.
:::

If you have troubles installing the package, feel free to [contact us](../../../contact.md) or leave an issue at the [GitHub project](https://github.com/Open-EO/openeo-r-client/issues).

Now that the installation was successfully finished, we can load the package and connect to openEO compliant back-ends. 
In the following chapters we quickly walk through the main features of the R client.

:::